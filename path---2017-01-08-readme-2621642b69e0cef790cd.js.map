{"version":3,"sources":["webpack:///path---2017-01-08-readme-2621642b69e0cef790cd.js","webpack:///./.cache/json/2017-01-08-readme.json"],"names":["webpackJsonp","369","module","exports","data","markdownRemark","tableOfContents","internal","content","frontmatter","title","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,gBAAA,GAAAC,UAAiCC,QAAA,0UAAmVC,aAAgBC,MAAA,uBAA8BC,aAAgBC,KAAA","file":"path---2017-01-08-readme-2621642b69e0cef790cd.js","sourcesContent":["webpackJsonp([45871175430504],{\n\n/***/ 369:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"tableOfContents\":\"\",\"internal\":{\"content\":\"---\\ntitle: Github上的README.md\\ndate: 2017-01-08 11:02:58\\ntags: Hexo\\n---\\n\\nHexo在渲染的時候默認是把source下面所有的.md檔案渲染成html，這樣的話會覆蓋掉Github上的CNAME和README.md。但是我又不想這樣，我想Github Repo下面可以直接看到這個blog的README.md內容。\\n\\n所以我就修改Hexo根目錄下的_config.yml：\\n```[markdown]\\nskip_render: README.md\\n```\\n\\n然後輸入以往部署Hexo的指令就可以。\\n```\\n$ hexo g\\n$ hexo d\\n```\\n\"},\"frontmatter\":{\"title\":\"Github上的README.md\"}}},\"pathContext\":{\"slug\":\"/readme/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2017-01-08-readme-2621642b69e0cef790cd.js","module.exports = {\"data\":{\"markdownRemark\":{\"tableOfContents\":\"\",\"internal\":{\"content\":\"---\\ntitle: Github上的README.md\\ndate: 2017-01-08 11:02:58\\ntags: Hexo\\n---\\n\\nHexo在渲染的時候默認是把source下面所有的.md檔案渲染成html，這樣的話會覆蓋掉Github上的CNAME和README.md。但是我又不想這樣，我想Github Repo下面可以直接看到這個blog的README.md內容。\\n\\n所以我就修改Hexo根目錄下的_config.yml：\\n```[markdown]\\nskip_render: README.md\\n```\\n\\n然後輸入以往部署Hexo的指令就可以。\\n```\\n$ hexo g\\n$ hexo d\\n```\\n\"},\"frontmatter\":{\"title\":\"Github上的README.md\"}}},\"pathContext\":{\"slug\":\"/readme/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2017-01-08-readme.json\n// module id = 369\n// module chunks = 45871175430504"],"sourceRoot":""}