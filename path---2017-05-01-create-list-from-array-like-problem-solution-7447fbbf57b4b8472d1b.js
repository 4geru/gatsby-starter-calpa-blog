webpackJsonp([59990977225276],{382:function(n,e){n.exports={data:{markdownRemark:{tableOfContents:'<ul>\n<li><a href="#%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%B3%95">解決方法</a></li>\n<li><a href="#%E9%8C%AF%E8%AA%A4%E4%BE%8B%E5%AD%90">錯誤例子</a></li>\n<li><a href="#%E6%AD%A3%E7%A2%BA%E4%BE%8B%E5%AD%90">正確例子</a></li>\n<li><a href="#%E7%B4%B0%E7%AF%80">細節</a></li>\n<li><a href="#createlistfromarraylike">CreateListFromArrayLike</a></li>\n<li><a href="#%E5%BB%B6%E4%BC%B8%E9%96%B1%E8%AE%80">延伸閱讀</a></li>\n<li><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99">參考資料</a></li>\n</ul>',internal:{content:"---\ntitle: CreateListFromArrayLike called on non-object 報錯的解決方法\nheaderImage: 'eySAMI1.jpg'\ndate: 2017-05-01 22:50\ntags:\n  - JavaScript\n---\n\n## 解決方法\n仔細再看一下到底你是如何調用`apply`的。。。\n\n你可能在使用Function.prototype.apply的時候不夠熟練，把`call`和`apply`的用法混在一起。。。。`call`是用0個或者更多的arguments，而`apply`則是用一個數組。\n\n## 錯誤例子\n```\nMath.max.apply(null, 1, 2, 3);\n// Uncaught TypeError: CreateListFromArrayLike called on non-object\n```\n\n## 正確例子\n```\nMath.max.call(null, 1, 2, 3); // 3\nMath.max.apply(null, [1, 2, 5, 10]); // 10\n```\n\n## 細節\n當調用`Function.prototype.apply`的時候，它會調用內置抽象操作：`CreateListFromArrayLike`。\n\n## CreateListFromArrayLike\n\n`CreateListFromArrayLike ( obj [ , elementTypes ] )`\n\nCreateListFromArrayLike 是一個ECMAScript的內置抽象操作 (Abstract Operation)，用於建立一個List的值，它的元素由類似數組的對象的索引屬性提供。`elementTypes`是一個List，只允許自身建立的`list`擁有ECMAScript Language 類型的值，比如`undefined, null, boolean`等。在調用的時候，它會執行以下步驟:\n1. 如果沒有定義`elementTypes`的話，它會被定義為« Undefined, Null, Boolean, String, Symbol, Number, Object »。\n2. 如果`Type(obj)`的類型不是Object，拋出TypeError 錯誤。\n3. 定義`len`為`obj`的length。\n4. 建立一個空的List `list`。\n5. 定義`index`為0\n6. 當index小於len的時候，重複以下步驟：\n\t1. 定義`indexName`為!ToString(index)\n\t2. 定義`next` 為?Get(obj, indexName)\n\t3. 如果`Type(next)`的類型不存在於`elementType`裡面，拋出TypeError 錯誤。\n\t4. 在`list`的最後增加next //`list.push(next)`\n\t5. `index`的值加1\n6. 返回`list`\n\n## 延伸閱讀\n1. 看V8是怎樣實現`Function.prototype.apply`\n2. 看V8是怎樣實現`CreateListFromArrayLike`\n\n## 參考資料\n1. [Function.prototype.apply - ECMAScript 2018](https://tc39.github.io/ecma262/#sec-function.prototype.apply)\n2. 踩過的坑。。。\n"},frontmatter:{title:"CreateListFromArrayLike called on non-object 報錯的解決方法"}}},pathContext:{slug:"/CreateListFromArrayLike-problem-solution/"}}}});
//# sourceMappingURL=path---2017-05-01-create-list-from-array-like-problem-solution-7447fbbf57b4b8472d1b.js.map